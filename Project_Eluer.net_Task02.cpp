/*
------------------ Even Fibonacci numbers ---------------------

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

*/
// Solution Algorithm
// Steps:
// 1. Create a function that gives the fibonacci numbers one by one
// 2. Extract the even numbers and sum them to the 'sum' value
#include <iostream>
#include <vector>

int SumOfEvenFib()
{
    unsigned int sum = 0;
    std::vector<unsigned int> fib(2);
    fib[1] = fib[0] = 1;
    
    for (int i = 2; fib[i-1] < 4000000; i++)
    {
        fib.resize(i + 1);
        fib[i] = fib[i - 1] + fib[i - 2];
        if (fib[i] % 2 == 0)
            sum += fib[i];

    }
    return sum;
}

int main()
{
    std::cout << SumOfEvenFib();

    return 0;
}
